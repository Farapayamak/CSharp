//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FaraPayamak.ScheduleServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScheduleServiceReference.ScheduleSoap")]
    public interface ScheduleSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddSchedule(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddScheduleAsync(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddUsance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddUsance(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int repeatAfterDays, System.DateTime scheduleEndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddUsance", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddUsanceAsync(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int repeatAfterDays, System.DateTime scheduleEndDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewUsance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddNewUsance(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int countrepeat, System.DateTime scheduleEndDateTime, FaraPayamak.ScheduleServiceReference.PeriodType periodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewUsance", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddNewUsanceAsync(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int countrepeat, System.DateTime scheduleEndDateTime, FaraPayamak.ScheduleServiceReference.PeriodType periodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int RemoveSchedule(string username, string password, int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<int> RemoveScheduleAsync(string username, string password, int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveScheduleList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int RemoveScheduleList(string username, string password, int[] scheduleIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveScheduleList", ReplyAction="*")]
        System.Threading.Tasks.Task<int> RemoveScheduleListAsync(string username, string password, int[] scheduleIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScheduleStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetScheduleStatus(string username, string password, int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScheduleStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetScheduleStatusAsync(string username, string password, int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScheduleDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FaraPayamak.ScheduleServiceReference.ScheduleDetails GetScheduleDetails(string username, string password, int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetScheduleDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<FaraPayamak.ScheduleServiceReference.ScheduleDetails> GetScheduleDetailsAsync(string username, string password, int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddMultipleSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int[] AddMultipleSchedule(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddMultipleSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> AddMultipleScheduleAsync(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewMultipleSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int[] AddNewMultipleSchedule(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddNewMultipleSchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> AddNewMultipleScheduleAsync(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PeriodType {
        
        /// <remarks/>
        Once,
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        Monthly,
        
        /// <remarks/>
        Yearly,
        
        /// <remarks/>
        Custom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ScheduleDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int scheduleIDField;
        
        private string senderField;
        
        private string titleField;
        
        private string bodyField;
        
        private int bodyPartsField;
        
        private int totalCountField;
        
        private int sentCountField;
        
        private int failedCountField;
        
        private string scheduleDateField;
        
        private string sendDateField;
        
        private byte sendStatusField;
        
        private byte scheduleStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
                this.RaisePropertyChanged("ScheduleID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
                this.RaisePropertyChanged("Sender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int BodyParts {
            get {
                return this.bodyPartsField;
            }
            set {
                this.bodyPartsField = value;
                this.RaisePropertyChanged("BodyParts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
                this.RaisePropertyChanged("TotalCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int SentCount {
            get {
                return this.sentCountField;
            }
            set {
                this.sentCountField = value;
                this.RaisePropertyChanged("SentCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int FailedCount {
            get {
                return this.failedCountField;
            }
            set {
                this.failedCountField = value;
                this.RaisePropertyChanged("FailedCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ScheduleDate {
            get {
                return this.scheduleDateField;
            }
            set {
                this.scheduleDateField = value;
                this.RaisePropertyChanged("ScheduleDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
                this.RaisePropertyChanged("SendDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public byte SendStatus {
            get {
                return this.sendStatusField;
            }
            set {
                this.sendStatusField = value;
                this.RaisePropertyChanged("SendStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public byte ScheduleStatus {
            get {
                return this.scheduleStatusField;
            }
            set {
                this.scheduleStatusField = value;
                this.RaisePropertyChanged("ScheduleStatus");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ScheduleSoapChannel : FaraPayamak.ScheduleServiceReference.ScheduleSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScheduleSoapClient : System.ServiceModel.ClientBase<FaraPayamak.ScheduleServiceReference.ScheduleSoap>, FaraPayamak.ScheduleServiceReference.ScheduleSoap {
        
        public ScheduleSoapClient() {
        }
        
        public ScheduleSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScheduleSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScheduleSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScheduleSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddSchedule(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period) {
            return base.Channel.AddSchedule(username, password, to, from, text, isflash, scheduleDateTime, period);
        }
        
        public System.Threading.Tasks.Task<int> AddScheduleAsync(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period) {
            return base.Channel.AddScheduleAsync(username, password, to, from, text, isflash, scheduleDateTime, period);
        }
        
        public int AddUsance(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int repeatAfterDays, System.DateTime scheduleEndDateTime) {
            return base.Channel.AddUsance(username, password, to, from, text, isflash, scheduleStartDateTime, repeatAfterDays, scheduleEndDateTime);
        }
        
        public System.Threading.Tasks.Task<int> AddUsanceAsync(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int repeatAfterDays, System.DateTime scheduleEndDateTime) {
            return base.Channel.AddUsanceAsync(username, password, to, from, text, isflash, scheduleStartDateTime, repeatAfterDays, scheduleEndDateTime);
        }
        
        public int AddNewUsance(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int countrepeat, System.DateTime scheduleEndDateTime, FaraPayamak.ScheduleServiceReference.PeriodType periodType) {
            return base.Channel.AddNewUsance(username, password, to, from, text, isflash, scheduleStartDateTime, countrepeat, scheduleEndDateTime, periodType);
        }
        
        public System.Threading.Tasks.Task<int> AddNewUsanceAsync(string username, string password, string to, string from, string text, bool isflash, System.DateTime scheduleStartDateTime, int countrepeat, System.DateTime scheduleEndDateTime, FaraPayamak.ScheduleServiceReference.PeriodType periodType) {
            return base.Channel.AddNewUsanceAsync(username, password, to, from, text, isflash, scheduleStartDateTime, countrepeat, scheduleEndDateTime, periodType);
        }
        
        public int RemoveSchedule(string username, string password, int scheduleId) {
            return base.Channel.RemoveSchedule(username, password, scheduleId);
        }
        
        public System.Threading.Tasks.Task<int> RemoveScheduleAsync(string username, string password, int scheduleId) {
            return base.Channel.RemoveScheduleAsync(username, password, scheduleId);
        }
        
        public int RemoveScheduleList(string username, string password, int[] scheduleIdList) {
            return base.Channel.RemoveScheduleList(username, password, scheduleIdList);
        }
        
        public System.Threading.Tasks.Task<int> RemoveScheduleListAsync(string username, string password, int[] scheduleIdList) {
            return base.Channel.RemoveScheduleListAsync(username, password, scheduleIdList);
        }
        
        public int GetScheduleStatus(string username, string password, int scheduleId) {
            return base.Channel.GetScheduleStatus(username, password, scheduleId);
        }
        
        public System.Threading.Tasks.Task<int> GetScheduleStatusAsync(string username, string password, int scheduleId) {
            return base.Channel.GetScheduleStatusAsync(username, password, scheduleId);
        }
        
        public FaraPayamak.ScheduleServiceReference.ScheduleDetails GetScheduleDetails(string username, string password, int scheduleId) {
            return base.Channel.GetScheduleDetails(username, password, scheduleId);
        }
        
        public System.Threading.Tasks.Task<FaraPayamak.ScheduleServiceReference.ScheduleDetails> GetScheduleDetailsAsync(string username, string password, int scheduleId) {
            return base.Channel.GetScheduleDetailsAsync(username, password, scheduleId);
        }
        
        public int[] AddMultipleSchedule(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period) {
            return base.Channel.AddMultipleSchedule(username, password, to, from, text, isflash, scheduleDateTime, period);
        }
        
        public System.Threading.Tasks.Task<int[]> AddMultipleScheduleAsync(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period) {
            return base.Channel.AddMultipleScheduleAsync(username, password, to, from, text, isflash, scheduleDateTime, period);
        }
        
        public int[] AddNewMultipleSchedule(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period) {
            return base.Channel.AddNewMultipleSchedule(username, password, to, from, text, isflash, scheduleDateTime, period);
        }
        
        public System.Threading.Tasks.Task<int[]> AddNewMultipleScheduleAsync(string username, string password, string[] to, string from, string[] text, bool isflash, System.DateTime[] scheduleDateTime, FaraPayamak.ScheduleServiceReference.PeriodType period) {
            return base.Channel.AddNewMultipleScheduleAsync(username, password, to, from, text, isflash, scheduleDateTime, period);
        }
    }
}
