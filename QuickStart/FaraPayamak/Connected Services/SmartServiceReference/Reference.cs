//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FaraPayamak.SmartServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmartServiceReference.SmartSmsSoap")]
    public interface SmartSmsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSmartSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendSmartSMS(string username, string password, string to, string text, string from, string fromSupportOne, string fromSupportTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSmartSMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendSmartSMSAsync(string username, string password, string to, string text, string from, string fromSupportOne, string fromSupportTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMultipleSmartSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long[] SendMultipleSmartSMS(string username, string password, string[] to, string[] text, string from, string fromSupportOne, string fromSupportTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMultipleSmartSMS", ReplyAction="*")]
        System.Threading.Tasks.Task<long[]> SendMultipleSmartSMSAsync(string username, string password, string[] to, string[] text, string from, string fromSupportOne, string fromSupportTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSmartSMSDeliveries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int[] GetSmartSMSDeliveries(long[] Id, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSmartSMSDeliveries", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> GetSmartSMSDeliveriesAsync(long[] Id, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSmartSMSDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FaraPayamak.SmartServiceReference.SmsQueueList GetSmartSMSDetails(string username, string password, long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSmartSMSDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<FaraPayamak.SmartServiceReference.SmsQueueList> GetSmartSMSDetailsAsync(string username, string password, long Id);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SmsQueueList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private int senderField;
        
        private string bodyField;
        
        private string receiverField;
        
        private System.DateTime insertDateField;
        
        private System.Nullable<System.DateTime> fetchDateField;
        
        private byte statusField;
        
        private System.Nullable<long> recIDField;
        
        private System.Nullable<int> deliveryStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
                this.RaisePropertyChanged("Sender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
                this.RaisePropertyChanged("Receiver");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime InsertDate {
            get {
                return this.insertDateField;
            }
            set {
                this.insertDateField = value;
                this.RaisePropertyChanged("InsertDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<System.DateTime> FetchDate {
            get {
                return this.fetchDateField;
            }
            set {
                this.fetchDateField = value;
                this.RaisePropertyChanged("FetchDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public byte Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<long> RecID {
            get {
                return this.recIDField;
            }
            set {
                this.recIDField = value;
                this.RaisePropertyChanged("RecID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<int> DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
                this.RaisePropertyChanged("DeliveryStatus");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SmartSmsSoapChannel : FaraPayamak.SmartServiceReference.SmartSmsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmartSmsSoapClient : System.ServiceModel.ClientBase<FaraPayamak.SmartServiceReference.SmartSmsSoap>, FaraPayamak.SmartServiceReference.SmartSmsSoap {
        
        public SmartSmsSoapClient() {
        }
        
        public SmartSmsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmartSmsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartSmsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartSmsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendSmartSMS(string username, string password, string to, string text, string from, string fromSupportOne, string fromSupportTwo) {
            return base.Channel.SendSmartSMS(username, password, to, text, from, fromSupportOne, fromSupportTwo);
        }
        
        public System.Threading.Tasks.Task<string> SendSmartSMSAsync(string username, string password, string to, string text, string from, string fromSupportOne, string fromSupportTwo) {
            return base.Channel.SendSmartSMSAsync(username, password, to, text, from, fromSupportOne, fromSupportTwo);
        }
        
        public long[] SendMultipleSmartSMS(string username, string password, string[] to, string[] text, string from, string fromSupportOne, string fromSupportTwo) {
            return base.Channel.SendMultipleSmartSMS(username, password, to, text, from, fromSupportOne, fromSupportTwo);
        }
        
        public System.Threading.Tasks.Task<long[]> SendMultipleSmartSMSAsync(string username, string password, string[] to, string[] text, string from, string fromSupportOne, string fromSupportTwo) {
            return base.Channel.SendMultipleSmartSMSAsync(username, password, to, text, from, fromSupportOne, fromSupportTwo);
        }
        
        public int[] GetSmartSMSDeliveries(long[] Id, string username, string password) {
            return base.Channel.GetSmartSMSDeliveries(Id, username, password);
        }
        
        public System.Threading.Tasks.Task<int[]> GetSmartSMSDeliveriesAsync(long[] Id, string username, string password) {
            return base.Channel.GetSmartSMSDeliveriesAsync(Id, username, password);
        }
        
        public FaraPayamak.SmartServiceReference.SmsQueueList GetSmartSMSDetails(string username, string password, long Id) {
            return base.Channel.GetSmartSMSDetails(username, password, Id);
        }
        
        public System.Threading.Tasks.Task<FaraPayamak.SmartServiceReference.SmsQueueList> GetSmartSMSDetailsAsync(string username, string password, long Id) {
            return base.Channel.GetSmartSMSDetailsAsync(username, password, Id);
        }
    }
}
